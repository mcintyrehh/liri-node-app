
//pulling in the .env file full of keys
require("dotenv").config();
//pulling in twitter/spotify/request npm packages
var Twitter = require('twitter');
var Spotify = require('node-spotify-api');
var request = require('request');
//setting an environmental variable for the keys
var keys = require("./keys");
//setting spotify keys for api calls
var spotify = new Spotify({
    id: keys.spotify.id,
    secret: keys.spotify.secret,
  });
//access for spotify and twitter keys
var spotify = new Spotify(keys.spotify);
var client = new Twitter(keys.twitter);

//setting the desired command as a variable, argv[0] is 'node' argv[1] is 'liri.js'
var command = process.argv[2];
//easily expandable function calls for our 4 commands
if (command == "my-tweets") {
    myTweets();
}
else if (command == "spotify-this-song") {
    spotifySong();
}
else if (command == "movie-this") {
    movieThis();
}
else if (command == "do-what-it-says") {
    doWhatItSays();
}
//my-tweets
//*shows (up to) the last 20 tweets and when they were created in terminal/bash window*
function myTweets() {
    var params = { screen_name: 'blue_tang_clan' };
    client.get('statuses/user_timeline', params, function (err, tweets, response) {
        if (!err) {
            for (var i = 0; i < 20; i++) {
              //if there is data for the tweet, print the tweet text and timestamp
                if (tweets[i]) { 
                console.log("*************************");
                console.log("Username: @" + tweets[i].user.screen_name);
                console.log("Tweet: " + tweets[i].text);
                console.log("Time: " + tweets[i].created_at);
                console.log("*************************\n");
              }
              // if no data (i.e. less than 20 tweets from user), exit loop
              else {
                  return;
              }
            }
        }
    })
}

function spotifySong() {
    //default song if nothing is entered
    var songName = "The Sign Ace of Base";
    //checks to see if something is added after 'spotify-this-song', if so it concatinates everything into a string to use as the search query
    if (process.argv[3]) {
        songName = "";
        for (var i = 3; i < process.argv.length; i++) {
            songName += process.argv[i] + " ";
        }
    }
    //spotify API search call
    spotify.search({type: 'track', query: songName}, function(err, data) {
        if(err) {
            return console.log("Error occured: " + err);
        }
        //stores the first returned song as a var, prints song data from the var
        var song = data.tracks.items[0];
        console.log("\n*************************");
        console.log("Song: " + song.name);
        console.log("Artist: " + song.artists[0].name);
        console.log("30 second preview url: " + song.preview_url);
        console.log("Album: " + song.album.name)
        console.log("**************************\n");
    });
}

function movieThis() {
    var movieName;
    //checks to see if something is added after 'movie-this', if so it concatinates everything into a string to use as the search query
    if (process.argv[3]) {
        movieName = "";
        for (var i = 3; i < process.argv.length; i++) {
            movieName += process.argv[i] + "+";
        }
    }
    //if not the default is 'mr. nobody'
    else {
        movieName = "Mr. Nobody";
    }
    //using the request package to call data from the OMDB API
    //passing through the movieName query generated by the users entry
    var queryURL = "https://www.omdbapi.com/?t=" + movieName + "&plot=short&type=movie&apikey=e73085d6";
    request(queryURL, function(err, response, body) {
        if(err) {
            console.log(err);
            return;
        }
        //parsing the returned data as JSON, so it can be accessed as a JSON object 
        var movieData = (JSON.parse(body));
        console.log("\n*************************");
        console.log("Movie Title: " + movieData.Title);
        console.log("Year of release: " + movieData.Year);
        console.log("IMDb Rating: " + movieData.Ratings[0].Value);
        console.log("IMDb Rating: " + movieData.Ratings[1].Value);
        console.log("Country: " + movieData.Country);
        console.log("Language: " + movieData.Language);
        console.log("Plot: " + movieData.Plot);
        console.log("Actors: " + movieData.Actors);
        console.log("**************************\n");
    })
}

function doWhatItSays() {
    
}
 //do-what-it-says
    //using the fs Node Package liri will take the text inside random.txt and use it to call one of liri's commands
    //have it run 'spotify-this-song' for the song in the file

//*BONUS* have the data log to terminal and output to .txt file **append data not overwrite**
//** */